# After changing this file, check it on:
#   http://lint.travis-ci.org/
language: python

os:
  - linux
  - osx

python:
  - 3.4
  - 3.5
  - 3.6

matrix:
  include:
    - os: osx
      python: 3.4
      language: generic
      env: TOXENV=py34
    - os: osx
      python: 3.5
      language: generic
      env: TOXENV=py35
    - os: osx
      python: 3.6
      language: generic
      env: TOXENV=py36
  allow_failures:
    - os: osx

env:
  global:
    # PYPIPASSWORD=...
    - secure: "eAreGa6ZBtzasZrZp32Hac3oxO+dmC2noOM+kcJA39yla4sQqdXCF0kot1VWuUXnbQ22khyGa68Rm59+pmlpExdNKikMWwm2j+DiRMJh/BimuwcXSG5Fw0rfSYmyL88QDdklBk0kzeXNdicjoKC8Ka+aiPraQ+OKhyyyKvj4Q6EMRvtd/YFg5R2xVucySHWxdvZX7ryJQIxUUN4me0mcGYZ61/W0ErGrpwk0+FcJA0TYZtyBD4CUvNdXgl0D+Wl0mAsh2bN0forMpr4U9pqoN8AUx4+1YNuQ9njh0fn/9zvQsTSPIwYsiEBbbtefKl+z3ucbTuvj1Kkgxo5ahdEyr5GBLc7gYyh9HMK4bqqSWg3bnkkpfpqM1pLvr3pZWiw1DLSRYKpahUQLwRnXtLaMVN+J4IJeg/1KkxOhbLUi6ahls0sXXLbxRMnWyaPFWiUsS4dU+diiec1csW0mwMSOeXgODaszY+3ZOLUtOdKoGU/CTYmrzYZRaMuB45XVECBMy8QExSP64HGvtVi3LtypK2J/B//fTkKc30WVICrrsBalY0DjgedrSzgAriVOAwsSzxtXYbCPHOrJ4lzJwU4ikAUPJyLCRJ+gb2GLgC+unNfj5etfJGPG95a+AEyFFepFHEJNtnOQTmy7MIGCCHkp+JTo+qe9b/yjCpGoBvO6f2Y="

before_install:
  - |
    if [[ $TRAVIS_OS_NAME != 'osx' ]]; then
      sudo apt-get -y install python3 python3-setuptools

      echo "No need to install PyQt5. It is required during execution only"

      # Builds, directory for temporay installation
      mkdir -p builds
      chmod a+rw builds

      ## Install sip and pyqt5
      #export DISPLAY=:99.0
      #sh -e /etc/init.d/xvfb start

      # Cached Downloads
      #sudo mkdir -p /downloads
      #sudo chmod a+rw /downloads
      #curl -L -o /downloads/sip.tar.gz https://nchc.dl.sourceforge.net/project/pyqt/sip/sip-4.18/sip-4.18.tar.gz
      #curl -L -o /downloads/PyQt5_gpl-5.6.tar.gz https://superb-dca2.dl.sourceforge.net/project/pyqt/PyQt5/PyQt-5.6/PyQt5_gpl-5.6.tar.gz

      # Qt5
      #sudo add-apt-repository -y ppa:beineri/opt-qt562
      #sudo apt-get update
      #sudo apt-get install -y qt56base

      # Builds
      #pushd /builds

      # SIP
      #tar xzf /downloads/sip.tar.gz --keep-newer-files
      #pushd sip-4.18
      #python configure.py
      #make
      #sudo make install
      #popd

      # PyQt5
      #source /opt/qt56/bin/qt56-env.sh  # switch to Qt5
      #tar xzf /downloads/PyQt5_gpl-5.6.tar.gz --keep-newer-files
      #pushd PyQt5_gpl-5.6
      #python configure.py -c --confirm-license --verbose --no-designer-plugin -e QtWidgets -e QtCore -e QtGui -e QtPrintSupport
      #make
      #sudo make install
      #popd

      # Out from builds
      #popd

      # Install patchelf
      pushd builds
      git clone https://github.com/NixOS/patchelf
      #curl -L -o patchelf-0.9.tar.gz https://nixos.org/releases/patchelf/patchelf-0.9/patchelf-0.9.tar.gz
      #tar -zxvf patchelf-0.9.tar.gz
      pushd patchelf
      ./bootstrap.sh
      ./configure && make && sudo make install
      popd
      popd

    else
      brew update
      brew install gcc5 --without-multilib
      brew install pyenv
      eval "$(pyenv init -)"

      case "${TOXENV}" in
        py34)
          PYVER=3.4
          # Install the latest release of the specified Python version using pyenv.
          PYVER="$(pyenv install --list | grep -E "^\\s*$PYVER" | sort -n -t. -k3 | tail -n1)"
          pyenv install $PYVER
          pyenv global $PYVER
          echo "Selected Python $PYVER"
          python --version
          ;;
        py35)
          PYVER=3.5
          # Install the latest release of the specified Python version using pyenv.
          PYVER="$(pyenv install --list | grep -E "^\\s*$PYVER" | sort -n -t. -k3 | tail -n1)"
          pyenv install $PYVER
          pyenv global $PYVER
          echo "Selected Python $PYVER"
          python --version
          ;;
        py36)
          PYVER=3.6
          # Install the latest release of the specified Python version using pyenv.
          PYVER="$(pyenv install --list | grep -E "^\\s*$PYVER" | sort -n -t. -k3 | tail -n1)"
          pyenv install $PYVER
          pyenv global $PYVER
          echo "Selected Python $PYVER"
          python --version
          ;;
      esac

      export CC=gcc-5

      # brew install pyqt5 --with-python3
    fi

install:
  - |
    if [[ $TRAVIS_OS_NAME == 'osx' ]]; then
      export CC=gcc-5
    fi
    pip install --upgrade pip
    pip install --upgrade wheel
    pip install --upgrade setuptools
    pip install Cython --install-option="--no-cython-compile"
    pip install uninstall numpy
    pip install install numpy
    pip install --upgrade scipy
    pip install --upgrade matplotlib
    pip install --upgrade h5py

    if [[ $TRAVIS_OS_NAME != 'osx' ]]; then
      pip install auditwheel
    fi

    # Install gcMapExplorer
    pip install -ve .

script:
  - python -c 'import gcMapExplorer'
  - python -c 'import gcMapExplorer.lib as gmlib'

after_success:
  # Specify account details for PyPI
  - |
    echo "[distutils]"                                  > ~/.pypirc
    echo "index-servers ="                             >> ~/.pypirc
    echo "    pypi"                                    >> ~/.pypirc
    echo "[pypi]"                                      >> ~/.pypirc
    echo "username=rjdkmr"                             >> ~/.pypirc
    echo "password=$PYPIPASSWORD"                      >> ~/.pypirc

  # For OS X and tags only, build a Python source distribution and "binary
  # wheel" and upload these to PyPI. Note that the source upload will only
  # succeed the first time and will be skipped by twine in subsiquent attempts.
  - |
    pip install --upgrade twine
    if [[ $TRAVIS_OS_NAME != 'osx' ]]; then
      pip wheel --no-deps --no-cache-dir -w wheels .
      auditwheel show wheels/*.whl
      auditwheel repair wheels/*.whl
      twine upload --skip-existing wheelhouse/*
      python setup.py sdist
    else
      python setup.py sdist bdist_wheel
    fi
    twine upload --skip-existing dist/*
